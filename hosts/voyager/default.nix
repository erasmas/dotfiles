# voyager - my ThinkPad laptop

{ config, pkgs, ... }:

{
  imports = [
    ../personal.nix
    ./hardware-configuration.nix

    # Desktop Environment
    ../../modules/desktop/gnome.nix

    # Applications
    ../../modules/dev.nix
    ../../modules/browser.nix
    ../../modules/editors/vim.nix
    ../../modules/shell/fish.nix
    ../../modules/vm.nix

    # Additional services
    ../../modules/services/fwupd.nix
    ../../modules/services/syncthing.nix
    ../../modules/services/tailscale.nix
    ../../modules/services/nextcloud.nix


    # Disabled modules
    # ../../modules/chat.nix
    # ../../modules/recording.nix
  ];

  networking.hostName = "voyager";

  # Fix X freezing
  boot.kernelParams = [
    "acpi_osi=Linux"
    "acpi_rev_override=1"
    "iommu=soft"
    "idle=nomwait"
  ];

  boot.kernelModules = [ "coretemp" "cpuid" ];

  # Update CPU microcode
  hardware.cpu.intel.updateMicrocode = true;

  hardware.opengl.enable = true;

  # Optimize power use & add battery indicator
  environment.systemPackages = [ pkgs.acpi ];

  # Power management
  powerManagement = {
    enable = true;
    cpuFreqGovernor = "powersave";
    powertop.enable = true;
  };

  environment.etc."sysconfig/lm_sensors".text = ''
     # Generated by sensors-detect on Tue Aug  7 10:54:09 2018
     # This file is sourced by /etc/init.d/lm_sensors and defines the modules to
     # be loaded/unloaded.
     #
     # The format of this file is a shell script that simply defines variables:
     # HWMON_MODULES for hardware monitoring driver modules, and optionally
     # BUS_MODULES for any required bus driver module (for example for I2C or SPI).

     HWMON_MODULES="coretemp"
   '';

  services.thermald.enable = true;

  # Monitor backlight control
  programs.light.enable = true;

  networking.firewall = {
    # enable the firewall
    enable = true;

    # always allow traffic from your Tailscale network
    trustedInterfaces = [ "tailscale0" ];

    # allow the Tailscale UDP port through the firewall
    allowedUDPPorts = [ config.services.tailscale.port ];

    # allow you to SSH in over the public internet
    allowedTCPPorts = [ 22 ];

    checkReversePath =  "loose";
  };

}
