#!/usr/bin/env python

# Creates symlinks for config files in current dir.

import os
from shutil import rmtree, copytree

FILES_TO_IGNORE = {'bootstrap', 'bin', 'README.md',}
OH_MY_ZSH_DIR = 'oh-my-zsh'
BIN_DIR = 'bin'


def remove(path):
    '''Removes dir/file/symlink with the given path.'''
    if os.path.exists(path) or os.path.islink(path):
        rem = os.unlink
        if os.path.isdir(path) and not os.path.islink(path):
            rem = rmtree
        rem(path)

def create_symlink(dst_dir, src, symlink_name=None, is_dotfiles=True):
    '''Creates a symlink in dst_dit for src with name '.' + symlink_name.

    If symlink_name is not supplied than src is used instead of it.
    '''
    symlink_name = symlink_name or src
    if is_dotfiles:
        symlink_name = '.' + symlink_name
    symlink_path = os.path.join(dst_dir, symlink_name)
    remove(symlink_path)
    os.symlink(os.path.abspath(src), symlink_path)

def create_dotfile_symlinks(dst_dir, ignored_set):
    '''Creates dotfile symlinks.

    Creates symlinks that start with '.' in dst_dir for every file and subdir
    in current dir (except ones in the ignored_list). If file/dir/symlink
    with such name already exists then it's deleted.
    '''
    for c in os.listdir('.'):
        if c not in ignored_set and not c.startswith('.'):
            create_symlink(dst_dir, c)

def copy_dirs(dst, srcs_set):
    '''Copies all directories from srcs_set to dst directory.'''
    for s in srcs_set:
        path = os.path.join(dst, s)
        remove(path)
        copytree(os.path.abspath(s), path)


if __name__ == '__main__':
    home = os.path.expanduser('~')
    create_dotfile_symlinks(home, FILES_TO_IGNORE)
    create_symlink(home, BIN_DIR, is_dotfiles = False)
    omz_plugins_dst = os.path.abspath(OH_MY_ZSH_DIR + '/custom/plugins/')
    copy_dirs(omz_plugins_dst, OH_MY_ZSH_CUSTOM_PLUGINS)
